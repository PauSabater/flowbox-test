const { Slider } = require('../components/Slider/Slider')
const React = require('react')
const render = require('@testing-library/react').render
const fireEvent = require('@testing-library/react').fireEvent
// import { render, fireEvent } from '@testing-library/react'
const mockupApiResponse = require('./mockup-data/mockup-api-response.json')
const { Card } = require('../components/Card/Card')


describe('Slider Component', () => {
    it('should update currentSlideNumber on range change', () => {
        // useSelector.mockReturnValue('slider'); // Assuming slider mode

        const { container } = render(<Slider apiResponse={mockupApiResponse.results} />)

        // Trigger a range change (example with Controls component interaction)
        const rangeValue = '2' // Simulating range change to index 2
        const rangeInput = container.querySelector('input[type="range"]')

        if (rangeInput) {
            fireEvent.change(rangeInput, { target: { value: rangeValue } })
        }

        console.log('HEY IN TEST!!')
        console.log(container.innerHTML)

        // Assert currentSlideNumber is updated
        // expect(container.querySelector('.current-slide').textContent).toBe('2');
      })

})
